
public class test41 {

	public static void main(String[] args) {
		
		// 방법2 : 해당 배열의 내용을 직접 초기화해서 배열 만드는 방법
		
		// 질문 : 방법2를 이용해 배열을 선언 후 배열생성후 초기화를 따로 작성할 수 있는가?
		//배열 선언
		int[] score;
		//배열 생성후 초기화
		//score = {50, 100, 80, 90, 30}; //배열 생성후~ 초기화를 따로 할 수 없다.
		
		// 해결방법
		score = new int[] {50, 100, 80, 90, 30}; //가능
		
		//---------------------------------------------
		
		// 질문 : 배열 선언, 생성만 해놓고 값을 초기화(저장)해 놓지 않을 경우? 배열에 접근하여 값을 얻으려고 할 때
		int[] score2 = new int[3];
		
		// 0인덱스위치에 100저장
		score2[0] = 100;
		
		// 1인덱스위치에 100저장
		score2[1] = 50;
		
		for(int i = 0; i < score2.length; i++) {
			System.out.println("score2["+i+"] : "+score2[i]);
		}
	
		
		/*
		 * score2[0]
		 * score2[1]
		 * score2[2] <- 해당 배열 자료형에 맞는 기본값 0으로 자동저장되어 있으므로 얻어 출력했음
		 */
		
	System.out.println("========================================");
	
	/* 배열 메모리를 생성하여 배열메모리의 주소값을 저장할 참조변수가 하는 역할에 대해 알아 보자. */
		
		int[] aArr = {1,2,3};
		//int [] bArr;
		int bArr[] = {4,5,6};
		int cArr[] = {6,7,8};
		
		//[1,2,3] 이 저장된 배열 메모리의 주소값을 bArr참조변수에 저장시키려면?
		bArr = aArr;
		
		for(int i = 0; i <aArr.length; i++) {
			System.out.println(aArr[i]+" : "+bArr[i]);
		}
		/* 
		  bArr = aArr;
		 -> bArr참조변수와 aArr참조변수에 저장된 배열 메모리의 주소값은 같아진다.
		 	기존에 bArr참조변수가 참조하는 [4,5,6] 배열메모리는 가비지컬렉터에 의해 수거(제거됨)
		 	더이상 [4,5,6]배열 메모리를 참조하는 것은 불가능함.
		 
		 */
		

	}

}
